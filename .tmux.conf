# make it use C-a like GNU screen
unbind C-b
set -g prefix C-a
set -g prefix2 C-b # for the benefit of colleagues; requires tmux >= 1.6

# bindings:
# - to see current bindings:
#   list-keys -t {vi,emacs}-{edit,choice,copy}
bind a send-prefix

# Vim-like key bindings for pane navigation (default uses cursor keys)
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l # normally used for last-window
bind l select-pane -R

# resizing (mouse also works)
unbind Left
bind -r Left resize-pane -L 5
unbind Right
bind -r Right resize-pane -R 5
unbind Down
bind -r Down resize-pane -D 5
unbind Up
bind -r Up resize-pane -U 5

# fast toggle (normally prefix-l)
bind ^a last-window

# intuitive window-splitting keys
bind | split-window -h # normally prefix-%
bind \ split-window -h # normally prefix-%
bind - split-window -v # normally prefix-"

# status bar
set -g status-utf8 on
set -g status-bg black
set -g status-fg white
set -g status-left-length 40
set -g status-left '#[fg=yellow]#S â§‰ '
set -g status-right '#[fg=yellow]#(whoami)@#h'

# automatically renumber window numbers on closing a pane (tmux >= 1.7)
set -g renumber-windows on

# highlight active window
set -w -g window-status-current-bg red

# mouse can be used to select panes
set -g mouse-select-pane on

# mouse can be used to select windows (by clicking in the status bar)
set -g mouse-select-window on

# mouse can be used to resize panes (by dragging dividers)
set -g mouse-resize-pane on

# not really sure what this does, but with it, the scrollwheel works inside Vim
set -g mouse-utf8 on

# allow mouse to enter copy mode and initiate selection
set -w -g mode-mouse on

set -g default-terminal "screen"

set -g history-limit 32768

# rate-limiting (tmux >= 1.7)
set -g c0-change-trigger 50 # default is 250 triggers/millisecond
set -g c0-change-interval 1000 # default throttle updates at 100 ms intervals

# start window numbering at 1, (0 is too hard to reach)
set -g base-index 1

# don't wait for an escape sequence after seeing C-a
set -s escape-time 0

# dynamically update iTerm tab and window titles
set -g set-titles on

# but don't change tmux's own window titles
set -w -g automatic-rename off

# adapted from (made as minimally invasive as possible):
# https://github.com/Casecommons/casecommons_workstation/commit/edfe7d0c3d4ffa3fefa150ee9c4abb19d0b11642
# https://github.com/Casecommons/casecommons_workstation/commit/016ee1644fbce55ca8d15a2a64cfe9a083b37ea6
set -g terminal-overrides 'screen*:CursorShape=%?%p1%{3}%<%t%{0}%e%p1%{2}%-%'

# #T      = standard window title (last command, see ~/.bash_profile)
# #h      = short hostname
# #S      = session name
# #W      = tmux window name
# (would love to include #(pwd) here as well, but that would only print the
# current working directory relative to the session -- ie. always the starting
# cwd -- which is not very interesting)
set -g set-titles-string "#T : #h > #S > #W"

# Clipper
# "copy_pipe" requires tmux >= 1.8
bind-key -t vi-copy Enter copy-pipe "nc localhost 8377"
